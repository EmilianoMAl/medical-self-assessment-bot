#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Bot de Autoevaluaci√≥n M√©dica B√°sica
====================================
Este programa es un chatbot simple para realizar una autoevaluaci√≥n m√©dica b√°sica.

IMPORTANTE: Este bot NO sustituye el consejo m√©dico profesional.
Siempre consulte con un m√©dico para diagn√≥sticos y tratamientos apropiados.
"""


def mostrar_bienvenida():
    """
    Muestra el mensaje de bienvenida y advertencia m√©dica
    """
    print("=" * 60)
    print("üè• BOT DE AUTOEVALUACI√ìN M√âDICA B√ÅSICA üè•")
    print("=" * 60)
    print()
    print("‚ö†Ô∏è  ADVERTENCIA IMPORTANTE ‚ö†Ô∏è")
    print("Este bot NO sustituye el consejo m√©dico profesional.")
    print("La informaci√≥n proporcionada es solo orientativa.")
    print("Siempre consulte con un m√©dico para diagn√≥sticos precisos.")
    print()
    print("¬°Hola! Soy tu asistente de autoevaluaci√≥n m√©dica.")
    print("Te har√© algunas preguntas sobre tus s√≠ntomas para darte")
    print("una orientaci√≥n general sobre tu condici√≥n.")
    print()


def obtener_respuesta_si_no(pregunta):
    """
    Obtiene una respuesta s√≠/no del usuario

    Args:
        pregunta (str): La pregunta a realizar

    Returns:
        bool: True si la respuesta es s√≠, False si es no
    """
    while True:
        respuesta = input(f"{pregunta} (s√≠/no): ").lower().strip()
        if respuesta in ['s√≠', 'si', 's', 'yes', 'y']:
            return True
        elif respuesta in ['no', 'n']:
            return False
        else:
            print("Por favor, responde 's√≠' o 'no'.")


def obtener_intensidad_sintoma(sintoma):
    """
    Obtiene la intensidad de un s√≠ntoma

    Args:
        sintoma (str): El s√≠ntoma a evaluar

    Returns:
        str: 'leve', 'moderado' o 'severo'
    """
    while True:
        print(f"\n¬øC√≥mo calificar√≠as la intensidad de tu {sintoma}?")
        print("1. Leve")
        print("2. Moderado")
        print("3. Severo")

        respuesta = input("Selecciona una opci√≥n (1-3): ").strip()

        if respuesta == '1':
            return 'leve'
        elif respuesta == '2':
            return 'moderado'
        elif respuesta == '3':
            return 'severo'
        else:
            print("Por favor, selecciona una opci√≥n v√°lida (1-3).")


def evaluar_sintomas_respiratorios():
    """
    Eval√∫a s√≠ntomas respiratorios y proporciona recomendaciones

    Returns:
        str: Recomendaci√≥n m√©dica basada en los s√≠ntomas
    """
    print("\n--- EVALUACI√ìN DE S√çNTOMAS RESPIRATORIOS ---")

    # Preguntas sobre s√≠ntomas respiratorios
    tiene_fiebre = obtener_respuesta_si_no("¬øTienes fiebre?")
    tiene_tos = obtener_respuesta_si_no("¬øTienes tos?")
    tiene_dolor_garganta = obtener_respuesta_si_no(
        "¬øTienes dolor de garganta?")
    tiene_congestion = obtener_respuesta_si_no("¬øTienes congesti√≥n nasal?")
    tiene_dificultad_respirar = obtener_respuesta_si_no(
        "¬øTienes dificultad para respirar?")

    # Evaluaci√≥n de intensidad si hay s√≠ntomas severos
    intensidad_fiebre = None
    intensidad_tos = None
    intensidad_dificultad = None

    if tiene_fiebre:
        intensidad_fiebre = obtener_intensidad_sintoma("fiebre")

    if tiene_tos:
        intensidad_tos = obtener_intensidad_sintoma("tos")

    if tiene_dificultad_respirar:
        intensidad_dificultad = obtener_intensidad_sintoma(
            "dificultad respiratoria")

    # An√°lisis y recomendaciones
    sintomas_severos = 0
    sintomas_moderados = 0

    if intensidad_fiebre == 'severo' or intensidad_tos == 'severo' or intensidad_dificultad == 'severo':
        sintomas_severos += 1

    if tiene_dificultad_respirar:
        return ("üö® ATENCI√ìN URGENTE: La dificultad respiratoria puede ser un s√≠ntoma grave. "
                "Te recomiendo que busques atenci√≥n m√©dica INMEDIATA.")

    if intensidad_fiebre == 'severo':
        return ("‚ö†Ô∏è Fiebre alta detectada. Es recomendable que consultes con un m√©dico "
                "lo antes posible, especialmente si la fiebre persiste por m√°s de 2 d√≠as.")

    if tiene_fiebre and tiene_tos and tiene_dolor_garganta:
        return ("Podr√≠as tener una infecci√≥n respiratoria viral o bacteriana. "
                "Recomendaciones: descanso, hidrataci√≥n abundante y consultar m√©dico "
                "si los s√≠ntomas empeoran o no mejoran en 3-5 d√≠as.")

    if tiene_tos and tiene_congestion:
        return ("Posible resfriado com√∫n. Recomendaciones: descanso, l√≠quidos calientes, "
                "y vaporizaciones. Consulta m√©dico si persiste m√°s de una semana.")

    if tiene_dolor_garganta:
        return ("Dolor de garganta leve. Puede ser viral. Recomendaciones: g√°rgaras "
                "con agua tibia y sal, hidrataci√≥n. Consulta m√©dico si empeora.")

    return ("S√≠ntomas respiratorios leves. Mant√©n reposo e hidrataci√≥n. "
            "Consulta m√©dico si los s√≠ntomas persisten o empeoran.")


def evaluar_sintomas_digestivos():
    """
    Eval√∫a s√≠ntomas digestivos y proporciona recomendaciones

    Returns:
        str: Recomendaci√≥n m√©dica basada en los s√≠ntomas
    """
    print("\n--- EVALUACI√ìN DE S√çNTOMAS DIGESTIVOS ---")

    tiene_nauseas = obtener_respuesta_si_no("¬øTienes n√°useas?")
    tiene_vomito = obtener_respuesta_si_no("¬øHas vomitado?")
    tiene_diarrea = obtener_respuesta_si_no("¬øTienes diarrea?")
    tiene_dolor_abdominal = obtener_respuesta_si_no("¬øTienes dolor abdominal?")
    tiene_fiebre = obtener_respuesta_si_no("¬øTienes fiebre?")

    intensidad_dolor = None
    if tiene_dolor_abdominal:
        intensidad_dolor = obtener_intensidad_sintoma("dolor abdominal")

    if intensidad_dolor == 'severo':
        return ("üö® ATENCI√ìN: Dolor abdominal severo puede indicar una condici√≥n grave. "
                "Busca atenci√≥n m√©dica INMEDIATA.")

    if tiene_vomito and tiene_diarrea and tiene_fiebre:
        return ("Posible gastroenteritis o intoxicaci√≥n alimentaria. "
                "Recomendaciones: hidrataci√≥n constante, dieta blanda, reposo. "
                "CONSULTA M√âDICO si hay signos de deshidrataci√≥n.")

    if tiene_diarrea and tiene_nauseas:
        return ("Posible malestar gastrointestinal. Recomendaciones: hidrataci√≥n, "
                "dieta blanda (arroz, pollo hervido, pl√°tano). Consulta m√©dico "
                "si persiste m√°s de 2 d√≠as.")

    if tiene_dolor_abdominal and intensidad_dolor == 'moderado':
        return ("Dolor abdominal moderado. Evita alimentos irritantes. "
                "Si persiste o empeora, consulta m√©dico.")

    return ("S√≠ntomas digestivos leves. Mant√©n hidrataci√≥n y dieta suave. "
            "Consulta m√©dico si los s√≠ntomas persisten.")


def evaluar_sintomas_generales():
    """
    Eval√∫a s√≠ntomas generales como dolor de cabeza, fatiga, etc.

    Returns:
        str: Recomendaci√≥n m√©dica basada en los s√≠ntomas
    """
    print("\n--- EVALUACI√ìN DE S√çNTOMAS GENERALES ---")

    tiene_dolor_cabeza = obtener_respuesta_si_no("¬øTienes dolor de cabeza?")
    tiene_fatiga = obtener_respuesta_si_no("¬øTe sientes muy cansado/fatigado?")
    tiene_dolor_muscular = obtener_respuesta_si_no(
        "¬øTienes dolores musculares?")
    tiene_mareos = obtener_respuesta_si_no("¬øTienes mareos?")

    intensidad_dolor_cabeza = None
    if tiene_dolor_cabeza:
        intensidad_dolor_cabeza = obtener_intensidad_sintoma("dolor de cabeza")

    if intensidad_dolor_cabeza == 'severo':
        return ("‚ö†Ô∏è Dolor de cabeza severo puede requerir atenci√≥n m√©dica. "
                "Consulta m√©dico, especialmente si es inusual para ti.")

    if tiene_dolor_cabeza and tiene_fatiga and tiene_dolor_muscular:
        return ("S√≠ntomas compatibles con estr√©s, tensi√≥n o inicio de proceso viral. "
                "Recomendaciones: descanso, hidrataci√≥n, relajaci√≥n. "
                "Consulta m√©dico si persiste m√°s de 3 d√≠as.")

    if tiene_mareos:
        return ("Los mareos pueden tener m√∫ltiples causas. Evita movimientos bruscos, "
                "mant√©n hidrataci√≥n. Consulta m√©dico si persisten o empeoran.")

    if tiene_fatiga:
        return ("Fatiga puede deberse a estr√©s, falta de sue√±o o m√∫ltiples causas. "
                "Aseg√∫rate de descansar bien. Consulta m√©dico si persiste sin causa clara.")

    return ("S√≠ntomas generales leves. Mant√©n buenos h√°bitos de descanso e hidrataci√≥n. "
            "Consulta m√©dico si los s√≠ntomas interfieren con tu vida diaria.")


def seleccionar_categoria_sintomas():
    """
    Permite al usuario seleccionar la categor√≠a de s√≠ntomas que tiene

    Returns:
        str: La categor√≠a seleccionada
    """
    print("\n¬øQu√© tipo de s√≠ntomas tienes principalmente?")
    print("1. S√≠ntomas respiratorios (tos, fiebre, dolor de garganta, etc.)")
    print("2. S√≠ntomas digestivos (n√°useas, v√≥mito, diarrea, dolor abdominal)")
    print("3. S√≠ntomas generales (dolor de cabeza, fatiga, mareos, dolores musculares)")

    while True:
        opcion = input("\nSelecciona una opci√≥n (1-3): ").strip()

        if opcion == '1':
            return 'respiratorios'
        elif opcion == '2':
            return 'digestivos'
        elif opcion == '3':
            return 'generales'
        else:
            print("Por favor, selecciona una opci√≥n v√°lida (1-3).")


def mostrar_recomendaciones_generales():
    """
    Muestra recomendaciones generales de salud
    """
    print("\n" + "=" * 50)
    print("üìã RECOMENDACIONES GENERALES DE SALUD")
    print("=" * 50)
    print("‚Ä¢ Mant√©n una hidrataci√≥n adecuada")
    print("‚Ä¢ Descansa lo suficiente")
    print("‚Ä¢ Mant√©n una alimentaci√≥n balanceada")
    print("‚Ä¢ Practica ejercicio regularmente")
    print("‚Ä¢ Evita el estr√©s excesivo")
    print("‚Ä¢ Consulta m√©dico ante dudas o s√≠ntomas persistentes")


def main():
    """
    Funci√≥n principal del bot de autoevaluaci√≥n m√©dica
    """
    # Mostrar bienvenida y advertencia
    mostrar_bienvenida()

    # Preguntar si el usuario quiere continuar
    if not obtener_respuesta_si_no("¬øDeseas realizar una autoevaluaci√≥n m√©dica b√°sica?"):
        print("\n¬°Gracias por usar el bot! Cu√≠date y mantente saludable. üëã")
        return

    # Seleccionar categor√≠a de s√≠ntomas
    categoria = seleccionar_categoria_sintomas()

    # Evaluar seg√∫n la categor√≠a seleccionada
    recomendacion = ""  # Inicializar la variable
    if categoria == 'respiratorios':
        recomendacion = evaluar_sintomas_respiratorios()
    elif categoria == 'digestivos':
        recomendacion = evaluar_sintomas_digestivos()
    elif categoria == 'generales':
        recomendacion = evaluar_sintomas_generales()
    else:
        recomendacion = "Error: Categor√≠a no reconocida. Por favor, reinicia el programa."

    # Mostrar resultados
    print("\n" + "=" * 60)
    print("üìã RESULTADO DE LA EVALUACI√ìN")
    print("=" * 60)
    print(f"\n{recomendacion}")
    print("\n‚ö†Ô∏è  RECORDATORIO IMPORTANTE:")
    print("Esta evaluaci√≥n es solo orientativa y NO sustituye")
    print("el consejo m√©dico profesional. Ante cualquier duda,")
    print("consulta con un m√©dico calificado.")

    # Mostrar recomendaciones generales
    mostrar_recomendaciones_generales()

    # Preguntar si quiere hacer otra evaluaci√≥n
    print("\n" + "=" * 60)
    if obtener_respuesta_si_no("¬øDeseas realizar otra evaluaci√≥n?"):
        print("\n" + "="*60)
        main()  # Llamada recursiva para nueva evaluaci√≥n
    else:
        print("\n¬°Gracias por usar el bot de autoevaluaci√≥n m√©dica!")
        print("¬°Que te mejores pronto! üè•üíô")
        print("=" * 60)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n¬°Gracias por usar el bot! ¬°Cu√≠date! üëã")
    except Exception as e:
        print(f"\n‚ùå Ha ocurrido un error inesperado: {e}")
        print("Por favor, reinicia el programa.")
